from PySide6.QtWidgets import QWidget, QVBoxLayout, QLabel, QPushButton, QScrollArea
from PySide6.QtCore import Qt

class InstructionsScreen(QWidget):
    def __init__(self, main_window):
        super().__init__()
        self.main_window = main_window
        self.layout = QVBoxLayout(self)
        # Установка стилей для всего экрана
        self.setStyleSheet("""
            QWidget {
                background-color: #3B4252;
            }
            QLabel {
                color: #ECEFF4;
                font-size: 16px;
                padding: 10px;
                width: 600px;  /* Увеличена ширина для более удобного отображения текста */
            }
            QPushButton {
                background-color: #4C566A;
                color: #ECEFF4;
                border: 1px solid #D8DEE9;
                border-radius: 8px;
                padding: 8px 16px;
            }
            QPushButton:hover {
                background-color: #5E81AC;
            }
            QPushButton:pressed {
                background-color: #4C566A;
            }
            QScrollArea {
                background-color: transparent;
                border: none;
                width: 700px;  /* Увеличена ширина области прокрутки */
            }
        """)
        # Кнопка "Назад"
        self.back_button = QPushButton("Назад")
        self.back_button.clicked.connect(self.go_back)
        self.layout.addWidget(self.back_button, alignment=Qt.AlignLeft)
        # Создание области прокрутки
        self.scroll_area = QScrollArea(self)
        self.scroll_area.setWidgetResizable(True)
        self.scroll_area.setFixedHeight(500)  # Увеличена высота области прокрутки
        # Внутренний виджет для размещения текста
        self.instructions_widget = QWidget()
        self.instructions_layout = QVBoxLayout(self.instructions_widget)
        # Текстовая метка для инструкции
        self.label = QLabel(
            "<h2>Инструкция по использованию приложения 'Сканер Тестов'</h2>"
            "<p>Добро пожаловать в приложение 'Сканер Тестов'! Это приложение предназначено для автоматической проверки тестов с помощью компьютерного зрения.</p>"
            "<h3>1. Начать проверку теста</h3>"
            "<p>Чтобы начать проверку, выполните следующие шаги:</p>"
            "<ul>"
            "   <li>Перейдите на вкладку <strong>'Начать проверку'</strong> в главном меню.</li>"
            "   <li>Убедитесь, что ваша камера настроена и работает корректно (проверьте фокусировку и освещенность).</li>"
            "   <li>Установите количество вопросов и вариантов ответов, выбрав нужные параметры (по умолчанию 5 вопросов по 5 вариантов ответа).</li>"
            "   <li>Заполните бланк с тестом, ставя отметки в соответствующих клетках (отметка в клетке определяется количеством белых пикселей).</li>"
            "   <li>Нацелите камеру на заполненный бланк. Приложение автоматически распознает ваш бланк и определит ответы.</li>"
            "   <li>После сканирования результаты будут отображены на экране, и будет показан процент правильных ответов.</li>"
            "</ul>"
            "<h3>2. Подготовка изображения для проверки</h3>"
            "<p>Для корректной работы приложения важно следовать нескольким рекомендациям по качеству изображения:</p>"
            "<ul>"
            "   <li>Убедитесь, что изображение теста сфокусировано и хорошо освещено.</li>"
            "   <li>Если используете камеру, держите бланк в центре кадра и избегайте искажений.</li>"
            "   <li>Проверьте, что контуры клеток теста четкие и не размыты.</li>"
            "   <li>Изображение должно быть четким и не содержать лишних объектов на фоне.</li>"
            "</ul>"
            "<h3>3. Скачать шаблон бланка</h3>"
            "<p>Чтобы скачать шаблон бланка для теста:</p>"
            "<ul>"
            "   <li>Перейдите на вкладку <strong>'Скачать шаблон бланка'</strong>.</li>"
            "   <li>Отредактируйте шаблон, который соответствует количеству вопросов (например, на 10 или 20 вопросов).</li>"
            "   <li>Нажмите кнопку для скачивания и сохраните файл на вашем устройстве.</li>"
            "</ul>"
            "<h3>4. Сетка и ответы</h3>"
            "<p>После того, как приложение распознает ответы, оно отобразит сетку с тестом, в которой будут выделены выбранные вами ответы:</p>"
            "<ul>"
            "   <li>Зеленым цветом будут помечены правильные ответы.</li>"
            "   <li>Красным цветом будут выделены неправильные ответы.</li>"
            "   <li>Результаты, такие как количество правильных ответов и процент точности, будут отображаться на экране.</li>"
            "</ul>"
            "<h3>5. Вкладка Отчет</h3>"
            "<p>На вкладке <strong>'Отчет'</strong> будут показаны результаты теста:</p>"
            "<ul>"
            "   <li>Количество правильных и неправильных ответов.</li>"
            "   <li>Процент правильных ответов.</li>"
            "   <li>Эти данные отображаются в реальном времени после выполнения теста, и вы можете просматривать их в этом разделе.</li>"
            "   <li>Отчеты сохраняются автоматически, они будут доступны для просмотра сразу после завершения сканирования.</li>"
            "</ul>"
            "<h3>6. Выход из приложения</h3>"
            "<p>Для завершения работы с приложением, нажмите кнопку <strong>'Выход'</strong> в главном меню. Это безопасно закроет приложение и сохранит ваши данные.</p>"
        )
        self.label.setWordWrap(True)
        self.label.setTextFormat(Qt.TextFormat.RichText)  # Используем правильный тип аргумента
        # Добавление метки в внутренний виджет
        self.instructions_layout.addWidget(self.label)
        # Установка внутреннего виджета в область прокрутки
        self.scroll_area.setWidget(self.instructions_widget)
        self.layout.addWidget(self.scroll_area)

    def go_back(self):
        self.main_window.show_main_menu()